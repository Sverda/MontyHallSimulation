<Application x:Class="UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UI"
             Startup="OnStartup">
    <Application.Resources>

        <!-- Colors -->
        <Color x:Key="Primary">#FFA200</Color>
        <Color x:Key="PrimaryHover">#cc722f</Color>
        <Color x:Key="Secondary">#1f1f1f</Color>
        <Color x:Key="White">#e6e6e6</Color>
        <Color x:Key="Gray">#4d4d4d</Color>
        <Color x:Key="Black">#171717</Color>
        <Color x:Key="Red">#FF0000</Color>

        <!-- Brushes -->
        <SolidColorBrush x:Key="Background" Color="{StaticResource Black}" />
        <SolidColorBrush x:Key="HeaderColor" Color="{StaticResource White}" />
        <SolidColorBrush x:Key="IconColor" Color="{StaticResource White}" />
        <!-- Brushes Primary Button -->
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource PrimaryHover}"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <!-- Brushes Icon Button -->
        <LinearGradientBrush x:Key="IconButtonGradient" EndPoint="1,0">
            <GradientStop Color="{StaticResource Primary}" Offset="0.0"/>
            <GradientStop Color="{StaticResource Red}" Offset="1.5"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="IconButton.Disabled.Foreground" Color="{StaticResource Gray}"/>
        <SolidColorBrush x:Key="IconButton.Pressed.Foreground" Color="{StaticResource PrimaryHover}"/>
        <!-- Brushes Textbox -->
        <SolidColorBrush x:Key="TextBox.Static.Foreground" Color="{StaticResource White}"/>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="{StaticResource Gray}"/>
        <SolidColorBrush x:Key="TextBox.CaretBrush" Color="{StaticResource Primary}"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{StaticResource PrimaryHover}"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{StaticResource Primary}"/>
        <!-- Brushes TextBlock -->
        <LinearGradientBrush x:Key="ResultTextBlock.Foreground" EndPoint="0,20" MappingMode="Absolute">
            <GradientStop Color="{StaticResource Primary}" Offset="0.0"/>
            <GradientStop Color="{StaticResource Red}" Offset="1.7"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ErrorTextBlock.Foreground" Color="{StaticResource White}"/>
        <SolidColorBrush x:Key="ErrorBorder.Background" Color="{StaticResource Red}"/>
        <LinearGradientBrush x:Key="ErrorBorder.BorderBrush" EndPoint="1,0">
            <GradientStop Color="{StaticResource Primary}" Offset="0.0"/>
            <GradientStop Color="{StaticResource Red}" Offset="1.5"/>
        </LinearGradientBrush>

        <!-- Icons -->
        <PathGeometry x:Key="SettingsIcon" Figures="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" />
        <PathGeometry x:Key="LeftArrowIcon" Figures="M20,10V14H11L14.5,17.5L12.08,19.92L4.16,12L12.08,4.08L14.5,6.5L11,10H20Z" />

        <!-- Header -->
        <Style TargetType="Label" x:Key="Header">
            <Setter Property="Foreground" Value="{StaticResource HeaderColor}" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <!-- Button Text -->
        <Style TargetType="Label" x:Key="ButtonText">
            <Setter Property="Foreground" Value="{StaticResource HeaderColor}" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <!-- Label Text -->
        <Style TargetType="Label" x:Key="LabelText">
            <Setter Property="Foreground" Value="{StaticResource HeaderColor}" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="Arial" />
        </Style>

        <!-- Primary Button -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" 
                                   StrokeDashArray="1 2" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   SnapsToDevicePixels="true" 
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="13 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                CornerRadius="20"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0">
                                    <GradientStop x:Name="gradientColor1" Color="{StaticResource Primary}" Offset="0.0"/>
                                    <GradientStop Color="{StaticResource Red}" Offset="1.2"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect x:Name="glowEffect"
                                                  ShadowDepth="0"
                                                  Color="{StaticResource Primary}"
                                                  Opacity="1"
                                                  BlurRadius="20"/>
                            </Border.Effect>
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Name="ButtonHover">
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                             Storyboard.TargetProperty="BlurRadius"
                                                             From="20" 
                                                             To="40" 
                                                             Duration="0:0:0.5" />
                                            <DoubleAnimation Storyboard.TargetName="gradientColor1"
                                                             Storyboard.TargetProperty="Offset"
                                                             From="0.0" 
                                                             To="0.8" 
                                                             Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="ButtonHover" />
                                    <BeginStoryboard>
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                             Storyboard.TargetProperty="BlurRadius"
                                                             From="40" 
                                                             To="20" 
                                                             Duration="0:0:0.5" />
                                            <DoubleAnimation Storyboard.TargetName="gradientColor1"
                                                             Storyboard.TargetProperty="Offset"
                                                             From="0.8" 
                                                             To="0.0" 
                                                             Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" 
                                        TargetName="contentPresenter" 
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Icon Button -->
        <Style x:Key="IconButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect x:Name="glowEffect"
                                                  ShadowDepth="0"
                                                  Color="{StaticResource Primary}"
                                                  Opacity="1"
                                                  BlurRadius="0"/>
                            </Border.Effect>

                            <Viewbox Width="36">
                                <Path x:Name="icon" 
                                      Fill="{StaticResource IconButtonGradient}" 
                                      Data="{TemplateBinding Content}" />
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Name="ButtonHover">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                             Storyboard.TargetProperty="BlurRadius"
                                                             From="0" 
                                                             To="40" 
                                                             Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="ButtonHover" />
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                             Storyboard.TargetProperty="BlurRadius"
                                                             From="40" 
                                                             To="0" 
                                                             Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="icon" Value="{StaticResource IconButton.Pressed.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Textbox -->
        <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBox.Static.Foreground}"/>
            <Setter Property="CaretBrush" Value="{StaticResource TextBox.CaretBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="True"
                                CornerRadius="15">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Result Text Block -->
        <Style x:Key="ResultTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource ResultTextBlock.Foreground}"/>
        </Style>
        
        <!--Error Text -->
        <Style x:Key="ErrorTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="{StaticResource ErrorTextBlock.Foreground}"/>
        </Style>
        <Style x:Key="ErrorBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource ErrorBorder.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorder.BorderBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Padding" Value="10"/>
        </Style>

    </Application.Resources>
</Application>
